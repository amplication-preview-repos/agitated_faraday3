/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  Motorcycle as PrismaMotorcycle,
  Repair as PrismaRepair,
  Customer as PrismaCustomer,
} from "@prisma/client";

export class MotorcycleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MotorcycleCountArgs, "select">
  ): Promise<number> {
    return this.prisma.motorcycle.count(args);
  }

  async motorcycles(
    args: Prisma.MotorcycleFindManyArgs
  ): Promise<PrismaMotorcycle[]> {
    return this.prisma.motorcycle.findMany(args);
  }
  async motorcycle(
    args: Prisma.MotorcycleFindUniqueArgs
  ): Promise<PrismaMotorcycle | null> {
    return this.prisma.motorcycle.findUnique(args);
  }
  async createMotorcycle(
    args: Prisma.MotorcycleCreateArgs
  ): Promise<PrismaMotorcycle> {
    return this.prisma.motorcycle.create(args);
  }
  async updateMotorcycle(
    args: Prisma.MotorcycleUpdateArgs
  ): Promise<PrismaMotorcycle> {
    return this.prisma.motorcycle.update(args);
  }
  async deleteMotorcycle(
    args: Prisma.MotorcycleDeleteArgs
  ): Promise<PrismaMotorcycle> {
    return this.prisma.motorcycle.delete(args);
  }

  async findRepairs(
    parentId: string,
    args: Prisma.RepairFindManyArgs
  ): Promise<PrismaRepair[]> {
    return this.prisma.motorcycle
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .repairs(args);
  }

  async findCustomers(
    parentId: string,
    args: Prisma.CustomerFindManyArgs
  ): Promise<PrismaCustomer[]> {
    return this.prisma.motorcycle
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .customers(args);
  }
}
